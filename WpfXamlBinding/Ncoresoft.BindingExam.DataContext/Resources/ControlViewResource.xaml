<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:model="clr-namespace:Ncoresoft.BindingExam.DataContext.Models"
                    xmlns:cvt="clr-namespace:Ncoresoft.BindingExam.DataContext.Converters"
                    xmlns:ctrl="clr-namespace:Ncoresoft.BindingExam.DataContext.Controls"
                    xmlns:refl="clr-namespace:System.Reflection;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <DataTemplate DataType="{x:Type model:WPFControlModel}" x:Key="DATA.CONTROL.CONTROLTYPE">
        <Border>
            <StackPanel>
                <TextBlock Grid.Row="0" Text="{Binding Control.Name}"/>
                <TextBlock Grid.Row="1" Text="{Binding Control}" Foreground="#999999"/>
            </StackPanel>
        </Border>
    </DataTemplate>

    <Style TargetType="{x:Type ListBox}" x:Key="CTRL.LBX.CONTROLVIEW">
        <Setter Property="ItemTemplate" Value="{StaticResource DATA.CONTROL.CONTROLTYPE}"/>
        <Setter Property="ItemsSource" Value="{Binding ControlSource}"/>
        <Setter Property="SelectedItem" Value="{Binding CurrentControl}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <ItemsPresenter/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <DataTemplate DataType="{x:Type refl:PropertyInfo}" x:Key="DATA.CONTROLVIEW.PROPERTY">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <TextBlock x:Name="type" Grid.Column="0" Text="{Binding PropertyType.Name}" Margin="0 0 4 0" Foreground="#AAAAAA"/>
            <TextBlock x:Name="name" Grid.Column="1" Text="{Binding Name}" Foreground="#AAAAAA"/>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Name}" Value="DataContext">
                <Setter TargetName="type" Property="Foreground" Value="#004484"/>
                <Setter TargetName="name" Property="Foreground" Value="#000000"/>
                <Setter TargetName="name" Property="FontWeight" Value="Bold"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <Style TargetType="{x:Type ListBoxItem}" x:Key="CTRL.LBXITEM.CONTROLVIEW.PROPERTIES">
        <Setter Property="ContentTemplate" Value="{StaticResource DATA.CONTROLVIEW.PROPERTY}"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter ContentSource="Content"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#EEEEEE"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#EEEEEE"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListBox}" x:Key="CTRL.LBX.CONTROLVIEW.PROPERTIES">
        <Setter Property="Grid.Column" Value="2"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource CTRL.LBXITEM.CONTROLVIEW.PROPERTIES}"/>
        <Setter Property="ItemsSource" Value="{Binding Properties}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <ItemsPresenter/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ToggleButton}" x:Key="CTRL.TGB.CONTROLVIEW.EXPANDER">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Geometry x:Key="PATH.CHEVRON.RIGHT">M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z</Geometry>
                        <Geometry x:Key="PATH.CHEVRON.DOWN">M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z</Geometry>
                        <Geometry x:Key="PATH.MENU.RIGHT.OUTLINE">M9,6H10.5L16.5,12L10.5,18H9V6M13.67,12L11,9.33V14.67L13.67,12Z</Geometry>
                        <Geometry x:Key="PATH.MENU.RIGHT">M10,17L15,12L10,7V17Z</Geometry>
                        <Geometry x:Key="PATH.MENU.DOWN">M7,10L12,15L17,10H7Z</Geometry>
                    </ControlTemplate.Resources>
                    <Border Background="Transparent" Padding="0 0 0 0">
                        <Viewbox Width="20" Height="20">
                            <Canvas Width="24" Height="24">
                                <Path x:Name="path" Fill="#444444" Data="{StaticResource PATH.MENU.RIGHT}"/>
                            </Canvas>
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="path" Property="Data" Value="{StaticResource PATH.MENU.DOWN}"/>
                            <Setter TargetName="path" Property="Fill" Value="#111111"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate DataType="{x:Type model:WPFControlModel}" x:Key="DATA.CONTROLVIEW.BASETYPE">
        <StackPanel>
            <StackPanel.Resources>
                <cvt:SliceParentNamespaceConverter x:Key="SliceNameConverter"/>
            </StackPanel.Resources>

            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                <TextBlock x:Name="point" Text="★" Margin="0 0 0 0" Visibility="Collapsed"/>
                <TextBlock x:Name="name" Text="{Binding Control.Name}" Foreground="#999999"/>
            </StackPanel>
            <TextBlock Grid.Column="1" Grid.Row="1" Text="{Binding Control.FullName, StringFormat={}({0}), Converter={StaticResource SliceNameConverter}}" 
                       Foreground="#BBBBBB" FontSize="11"/>
        </StackPanel>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Control.Name}" Value="FrameworkElement">
                <Setter TargetName="point" Property="Visibility" Value="Visible"/>
                <Setter TargetName="name" Property="Foreground" Value="#000000"/>
                <Setter TargetName="name" Property="FontWeight" Value="Bold"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    
    <Style TargetType="{x:Type TreeViewItem}" x:Key="CTRL.TRVITEM.CONTROLVIEW">
        <Setter Property="ItemsSource" Value="{Binding Controls}"/>
        <Setter Property="HeaderTemplate" Value="{StaticResource DATA.CONTROLVIEW.BASETYPE}"/>
        <Setter Property="IsExpanded" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeViewItem">
                    <StackPanel>
                        <Border x:Name="bdr" Padding="4" Background="Transparent">
                            <Border.Resources>
                                <cvt:LeftMarginCalculatingConverter x:Key="LeftEmptyConverter" Length="15"/>
                            </Border.Resources>
                            <Grid Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource LeftEmptyConverter}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <ToggleButton x:Name="chk" Style="{StaticResource CTRL.TGB.CONTROLVIEW.EXPANDER}"
                                              IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsExpanded}"/>
                                <ContentPresenter Grid.Column="1" ContentSource="Header" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost"/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="bdr" Property="Background" Value="#EEEEEE"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="chk" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type ctrl:ControlTreeView}" x:Key="CTRL.TRV.CONTROLVIEW">
        <Setter Property="Grid.Column" Value="1"/>
        <Setter Property="ItemsSource" Value="{Binding BaseControls}"/>
        <Setter Property="Command" Value="{Binding SelectedCommand}"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource CTRL.TRVITEM.CONTROLVIEW}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrl:ControlTreeView}">
                    <Border>
                        <ItemsPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>